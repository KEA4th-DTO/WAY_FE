{
    "sourceFile": "src/components/main/ChatContent.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1715833509587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1715833509587,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\nimport \"../../assets/scss/layout/_chatcontent.scss\";\nimport close from \"../../assets/images/logos/close.png\";\nimport members from \"../../assets/images/logos/members.png\";\nimport ChatFromMe from './ChatFromMe';  \nimport ChatFromOther from './ChatFromOther';\n\nconst ChatContent = ({ data, onClose }) => {\n    const memberId = \"id_222\"; // 임시 사용자 아이디\n    const nickname = \"ShinHyungMan\"; // 임시 사용자 닉네임\n    const [chat, setChat] = useState([]);\n    const [newChatContent, setNewChatContent] = useState(\"\"); // 새로 입력한 채팅 내용\n\n\n    useEffect(()=>{\n        fetch('http://localhost:3001/chatcontent') //API경로 적어주기\n        .then(res => {\n            return res.json() //json으로 변환됨\n        })\n        .then(data => {\n            setChat(data);\n        })\n        .catch(error => console.error(\"Error fetching data:\", error));\n    }, []);\n\n    const handleCloseClick = () => {\n        onClose(); // 부모 컴포넌트에 닫기 이벤트 전달\n      };\n\n\n    const handleSubmit = () => {\n      // 서버로 새로운 채팅 내용을 POST 요청으로 보냄\n      fetch('http://localhost:3001/chatcontent', {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n              memberId: memberId,\n              nickname: nickname,\n              content: newChatContent,\n              time: new Date().toLocaleTimeString(), // 현재 시간을 채팅 시간으로 설정\n          }),\n      })\n      .then(response => response.json())\n      .then(data => {\n          console.log('Success:', data);\n          // 채팅 내용을 전송한 후 입력창을 초기화\n          setNewChatContent(\"\");\n      })\n      .catch((error) => {\n          console.error('Error:', error);\n      });\n  };\n\n  return (\n      <div style={{border:\"3px solid red\"}}  className=\"frame\">\n        {/* 상단창 */}\n         <div className=\"top-window\">\n          <img\n            src={close}\n            alt=\"닫기\"\n            className=\"close-button\"\n            onClick={handleCloseClick} // 닫기 버튼 클릭 시 handleCloseClick 함수 호출\n          />\n          <div className=\"frame-line\"></div>\n          \n          <span className=\"top-title\">\n            <span>{data.title}</span>\n          </span>\n          <span className=\"top-period\">\n            <span>{data.period}</span>\n          </span>\n          <img\n            src={members}\n            alt=\"사람 아이콘\"\n            className=\"members-icon\"\n          />\n         <span className=\"top-member-num\" >{data.memberNum}</span>\n        </div>\n\n        {/* 채팅창 */}\n        <div id=\"list\" className='chat-container' style={{ border: \"3px solid yellow\", overflow: \"auto\", marginTop: \"10%\" }}>\n          {chat.map((item) => (\n            <div key={item.id}>\n              {item.memberId === memberId ? <ChatFromMe content={item} /> : <ChatFromOther content={item} />}\n            </div>\n          ))}\n        </div>\n    \n        {/*  전송창  */}\n        <div className=\"send-window\" />\n        <input\n                type=\"text\"\n                value={newChatContent}\n                onChange={(e) => setNewChatContent(e.target.value)}\n                className='send-text'\n                placeholder=\"메시지를 입력하세요.\"\n            />\n        <div className=\"send-frame1\">\n          <div className=\"send-group\">\n            <span className=\"send-text02\">\n            <button onClick={handleSubmit}>전송</button>\n            </span>\n          </div>\n        </div>\n    \n      \n    </div>\n  )\n}\n\nexport default ChatContent;"
        }
    ]
}