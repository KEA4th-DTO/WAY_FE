{
    "sourceFile": "src/components/main/DailyEdit.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1715837736445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1715837736445,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../assets/scss/layout/_upload.scss';\n\nconst DailyEdit = ({ postType }) => {\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n    const [createdAt, setCreatedAt] = useState(new Date().toISOString()); // 현재 시간으로 초기화\n    const [expiredAt, setExpiredAt] = useState(''); // 만료 시간\n    const [memberId] = useState('id_222');\n    const [address, setAddress] = useState('');\n    const [amPm, setAmPm] = useState('AM'); // 오후/오전\n    const [hour, setHour] = useState('12'); // 시간\n    const [minute, setMinute] = useState('00'); // 분\n    const [todaySelected, setTodaySelected] = useState(false);\n    const [tomorrowSelected, setTomorrowSelected] = useState(false);\n    const navigate = useNavigate();\n\n\n    const [newChatContent, setNewChatContent] = useState(\"\"); // 새로 입력한 채팅 내용\n\n\n    useEffect(() => {\n        // 컴포넌트가 처음 마운트될 때 한 번 실행\n        const interval = setInterval(() => {\n            // 매 초마다 현재 시간을 업데이트\n            setCreatedAt(new Date().toISOString());\n        }, 1000);\n\n        // 컴포넌트가 언마운트될 때 clearInterval을 호출하여 메모리 누수를 방지\n        return () => clearInterval(interval);\n    }, []); // 빈 배열을 전달하여 컴포넌트가 처음 마운트될 때만 실행\n\n    const onSave = async () => {\n        try {\n            const response = await fetch(`http://localhost:3001/post/`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ \n                    title,\n                    body,\n                    memberId,\n                    likeNum: 0,\n                    commentNum: 0,\n                    createdAt,\n                    expiredAt,\n                    postType,\n                    address,\n                }),\n            });\n            const data = await response.json();\n            alert('저장되었습니다.');\n            // 페이지 이동\n            navigate('/mymap');\n            console.log('Success:', data);\n            // Optionally, show a success message or redirect the user\n        } catch (error) {\n            console.error('Error:', error);\n            // Optionally, show an error message to the user\n        }\n    };\n\n    const onUploadImage = async (blob, callback) => {\n        console.log(blob);\n        // Handle image upload logic\n    };\n\n    const onChangeTitle = (e) => {\n        setTitle(e.target.value);\n    };\n\n    const onChangeAddress = (e) => {\n        setAddress(e.target.value);\n    };\n\n    const formattedTime = new Date(createdAt).toLocaleString('ko-KR');\n\n    const handleTodayClick = () => {\n        const today = new Date();\n        today.setHours(amPm === 'PM' ? Number(hour) + 12 : Number(hour));\n        today.setMinutes(Number(minute));\n        today.setSeconds(0);\n        setExpiredAt(today.toISOString());\n        setTodaySelected(true);\n        setTomorrowSelected(false);\n    };\n\n    const handleTomorrowClick = () => {\n        const tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate() + 1);\n        tomorrow.setHours(amPm === 'PM' ? Number(hour) + 12 : Number(hour));\n        tomorrow.setMinutes(Number(minute));\n        tomorrow.setSeconds(0);\n        setExpiredAt(tomorrow.toISOString());\n        setTodaySelected(false);\n        setTomorrowSelected(true);\n    };\n\n\n    return (\n        <div className=\"edit_wrap\" style={{ position: \"relative\" }}>\n            <div>\n                <h2>\n                    제목: \n                    <input style={{ marginLeft: \"10px\", border: \"none\", width: \"400px\" }} type=\"text\" placeholder=\"제목을 입력하세요.\" value={title} onChange={onChangeTitle} />\n                </h2>\n                <span style={{ marginLeft: \"25px\" }}>\n                    주소: \n                    <input style={{ marginLeft: \"10px\", border: \"none\", width: \"400px\" }} type=\"text\" placeholder=\"주소를 입력하세요.\" value={address} onChange={onChangeAddress} />\n                </span>\n                <div style={{ marginTop: \"5px\" }}>\n                    현재 시간: {formattedTime}\n                </div>\n                <div style={{ marginTop: \"5px\", position: \"relative\" }}>\n                    만료 시간:\n                    <div style={{ display: \"inline-block\", marginRight: \"5px\" }}>\n                        <button onClick={handleTodayClick} className={todaySelected ? \"today\" : \"tomorrow\"}>오늘</button>\n                        <button onClick={handleTomorrowClick} className={tomorrowSelected ? \"today\" : \"tomorrow\"}>내일</button>\n                    </div>\n                    <select style={{ marginLeft: \"5px\" }} value={amPm} onChange={(e) => setAmPm(e.target.value)}>\n                        <option value=\"AM\">오전</option>\n                        <option value=\"PM\">오후</option>\n                    </select>\n                    <select value={hour} onChange={(e) => setHour(e.target.value)}>\n                        {[...Array(12)].map((_, i) => (\n                            <option key={i + 1} value={i + 1}>{String(i + 1).padStart(2, '0')}</option>\n                        ))}\n                    </select>\n                    시\n                    <select value={minute} onChange={(e) => setMinute(e.target.value)}>\n                        {[...Array(60)].map((_, i) => (\n                            <option key={i} value={i}>{String(i).padStart(2, '0')}</option>\n                        ))}\n                    </select>\n                    분\n                </div>\n            </div>\n            <br />\n            <button className='save' onClick={onSave}>저장</button>\n            <input\n                type=\"text\"\n                value={newChatContent}\n                placeholder=\"내용을 입력하세요.\"\n            />\n        </div>\n    );\n};\n\nexport default DailyEdit;"
        }
    ]
}