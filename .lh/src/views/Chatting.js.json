{
    "sourceFile": "src/views/Chatting.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1715833824927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1716193029167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,6 @@\n import React, { useState, useEffect } from 'react';\n import \"../assets/scss/layout/_chatting.scss\";  \n-import sky from \"../assets/images/bg/sky.png\";\n-import user6 from \"../assets/images/users/user6.png\";\n import full_checkbox from \"../assets/images/icons/full_checkbox.png\";\n import checkbox from \"../assets/images/icons/checkbox.png\";\n import ChatRoom from '../components/main/ChatRoom';\n import ChatContent from '../components/main/ChatContent';\n"
                }
            ],
            "date": 1715833824927,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\nimport \"../assets/scss/layout/_chatting.scss\";  \nimport sky from \"../assets/images/bg/sky.png\";\nimport user6 from \"../assets/images/users/user6.png\";\nimport full_checkbox from \"../assets/images/icons/full_checkbox.png\";\nimport checkbox from \"../assets/images/icons/checkbox.png\";\nimport ChatRoom from '../components/main/ChatRoom';\nimport ChatContent from '../components/main/ChatContent';\n\nconst Chatting= () => {\n\n  // 데이터 가져오기\n  const [chatRoom, setChatRoom] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState(null); // 추가: 선택된 게시글 상태\n  const [checkedItems, setCheckedItems] = useState([]); // 추가: 체크된 아이템 배열\n  const [isAllChecked, setIsAllChecked] = useState(false); // 추가: 모든 아이템 선택 상태\n\n  useEffect(() => {\n    fetch('http://localhost:3001/chatroom') // API 경로 적어주기\n      .then(res => res.json())\n      .then(data => {\n        setChatRoom(data);\n      })\n      .catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  // 포스트 클릭 시 선택된 포스트 업데이트\n  const handleRoomClick = (selectedItem) => {\n    setSelectedRoom(selectedItem);\n  };\n\n  // 리스트에 있는 체크박스를 토글하는 함수\n  const toggleCheckbox = (id) => {\n    if (checkedItems.includes(id)) {\n      setCheckedItems(checkedItems.filter(item => item !== id)); // 이미 선택된 아이템이면 제거\n    } else {\n      setCheckedItems([...checkedItems, id]); // 새로운 아이템을 추가\n    }\n  };\n\n  // 상단 메뉴의 체크박스를 클릭하여 모든 아이템 선택 또는 해제\n  const handleAllCheckboxToggle = () => {\n    if (isAllChecked) {\n      setCheckedItems([]); // 모든 아이템 선택 해제\n    } else {\n      const allIds = chatRoom.map(item => item.id); // 모든 아이템의 ID 배열\n      setCheckedItems(allIds); // 모든 아이템 선택\n    }\n    setIsAllChecked(!isAllChecked); // 상태 토글\n  };\n\n  // '읽음' 버튼 클릭 시 체크된 아이템들의 alarmNum을 0으로 설정하고 체크 해제\n  const handleReadClick = () => {\n    checkedItems.forEach(id => {\n      fetch(`http://localhost:3001/days/${id}`, {\n        method: 'PATCH', // 데이터 수정을 위해 PATCH 요청 사용\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ alarmNum: 0 }) // alarmNum을 0으로 설정\n      })\n      .then(res => {\n        if (res.ok) {\n          setChatRoom(prevState => prevState.map(item => {\n            if (item.id === id) {\n              return { ...item, alarmNum: 0 }; // 변경된 alarmNum으로 업데이트\n            }\n            return item;\n          }));\n        }\n      })\n      .catch(error => console.error(\"Error updating data:\", error));\n    });\n    setCheckedItems([]); // 체크 해제\n  };\n\n  // '나가기' 버튼 클릭 시 체크된 아이템들을 제거\n  const handleLeaveClick = () => {\n    checkedItems.forEach(id => {\n      fetch(`http://localhost:3001/days/${id}`, {\n        method: 'DELETE'\n      })\n      .then(res => {\n        if (res.ok) {\n          setChatRoom(prevState => prevState.filter(item => item.id !== id)); // 해당 아이템 제거\n        }\n      })\n      .catch(error => console.error(\"Error deleting data:\", error));\n    });\n    setCheckedItems([]); // 체크 해제\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <div style={{ border: \"3px solid red\" }} className=\"frame-container\">\n        {/* 채팅 상단 메뉴 */}\n        <div className=\"frame1-frame\">\n          <button style={{ border: \"none\" }} onClick={handleAllCheckboxToggle}>\n            <img src={isAllChecked ? full_checkbox : checkbox} alt=\"Checkbox2251\" className=\"frame1-checkbox\" />\n          </button>\n          <span className=\"frame1-text\">\n            <button style={{ border: \"none\" }} onClick={handleLeaveClick}>나가기</button>\n          </span>\n          <span className=\"frame1-text2\">\n            <button style={{ border: \"none\" }} onClick={handleReadClick}>읽음</button>\n          </span>\n        </div>\n\n        {/* 채팅 제목 */}\n        <div className=\"chatting\">\n          <span className=\"text\">\n            채팅\n          </span>\n          <div className=\"alarm\">\n            <span className=\"text\">\n              15\n            </span>\n          </div>\n        </div>\n\n        {/* 대화방 */}\n        <div id='list' style={{ border: \"3px solid yellow\", overflow: \"auto\", marginTop: \"10px\", }} className=\"frame2-frame\">\n          {chatRoom.map((item) => (\n            <div key={item.id}>\n              <img\n                src={checkedItems.includes(item.id) ? full_checkbox : checkbox} // 체크 여부에 따라 이미지 변경\n                alt=\"Checkbox2251\"\n                className=\"frame2-checkbox\"\n                onClick={() => toggleCheckbox(item.id)} // 클릭 시 토글\n              />\n              <button style={{ border: \"3px solid black\" }} onClick={() => handleRoomClick(item)}>\n                <ChatRoom data={item} />\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {selectedRoom && (\n        <div className='frame3-container'>\n          <ChatContent data={selectedRoom} onClose={() => setSelectedRoom(null)} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chatting;\n"
        }
    ]
}