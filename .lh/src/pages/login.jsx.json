{
    "sourceFile": "src/pages/login.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1716193580451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1716272131045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n   };\n \n   const handleSubmit = async (event) => {\n     event.preventDefault();\n-    const url = \"http://61.109.239.63:50001/member-service/login\";\n+    const url = \"http://210.109.55.193:50004/member-service/login\";\n     const data = {\n       email: email,\n       password: password,\n       // rememberMe: rememberMe,\n"
                },
                {
                    "date": 1716272248718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,17 +79,16 @@\n         if (response.status === 200) {\n           const responseData = response.data;\n           if (responseData.isSuccess) {\n             const { grantType, accessToken } = responseData.result.jwtToken;\n-            const { name, email, nickname } = responseData.result.loginMember;\n+            const { name, email, nickname } = responseData.result;\n             localStorage.setItem(\"accessToken\", accessToken);\n             localStorage.setItem(\"userName\", name);\n             localStorage.setItem(\"userEmail\", email);\n             localStorage.setItem(\"userNickname\", nickname);\n             axios.defaults.headers.common[\n               \"Authorization\"\n             ] = `${grantType} ${accessToken}`;\n-            // setUser(userData);\n             navigate(\"/localmap\");\n           } else {\n             console.error(\"로그인 실패:\", responseData.message);\n           }\n@@ -219,5 +218,5 @@\n       </div>\n     </div>\n   );\n }\n-export default Login;\n+export default Login;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1716273974698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,222 @@\n+import React, { useState } from \"react\";\n+import { useNavigate } from \"react-router-dom\";\n+import { Link } from \"react-router-dom\";\n+import \"../assets/style/login.css\";\n+import kakaoImg from \"../assets/img/kakao.png\";\n+import googleImg from \"../assets/img/google_login.png\";\n+import axios from \"axios\";\n+import { useUserContext } from \"../contexts/UserContext\";\n+\n+function Login() {\n+  const navigate = useNavigate();\n+\n+  const [isEmailClicked, setisEmailClicked] = useState(false);\n+  const [email, setEmail] = useState(\"\");\n+  const [password, setPassword] = useState(\"\");\n+  const [rememberMe, setRememberMe] = useState(false);\n+  const [isPasswordClicked, setisPasswordClicked] = useState(false);\n+  const handleEmailChange = (event) => {\n+    setEmail(event.target.value);\n+  };\n+  // const { setUser } = useUserContext();\n+\n+  function kakaoLoginHandler() {\n+    const Rest_api_key = \"\ta636a1c4c0b845384ca75dd034081a1b\";\n+    const redirect_uri = \"http://localhost:3000/auth\";\n+\n+    const kakaoURL = `https://kauth.kakao.com/oauth/authorize?client_id=${Rest_api_key}&redirect_uri=${redirect_uri}&response_type=code`;\n+\n+    const popup = window.open(kakaoURL, \"Kakao Login\", \"width=600,height=600\");\n+\n+    const checkPopupClosed = setInterval(() => {\n+      if (popup.closed) {\n+        clearInterval(checkPopupClosed);\n+        // window.location.href = \"/localmap\";\n+      }\n+    });\n+\n+    window.addEventListener(\"message\", (event) => {\n+      if (event.origin !== window.origin) {\n+        console.log(\"asdf\");\n+        return;\n+      }\n+\n+      const { type, data } = event.data;\n+\n+      if (type === \"kakaoLogin\") {\n+        clearInterval(checkPopupClosed);\n+        popup.close();\n+        window.location.href = \"/localmap\";\n+      }\n+    });\n+  }\n+\n+  const handlePasswordChange = (event) => {\n+    setPassword(event.target.value);\n+  };\n+\n+  const handleRememberMeChange = (event) => {\n+    setRememberMe(event.target.checked);\n+  };\n+\n+  const handleSubmit = async (event) => {\n+    event.preventDefault();\n+    const url = \"http://210.109.55.193:50004/member-service/login\";\n+    const data = {\n+      email: email,\n+      password: password,\n+      // rememberMe: rememberMe,\n+    };\n+\n+    axios\n+      .post(url, data, {\n+        headers: {\n+          \"Content-Type\": \"application/json\",\n+        },\n+        withCredentials: true,\n+      })\n+      .then((response) => {\n+        if (response.status === 200) {\n+          const responseData = response.data;\n+          if (responseData.isSuccess) {\n+            const { grantType, accessToken } = responseData.result.jwtToken;\n+            const { name, email, nickname } = responseData.result;\n+            localStorage.setItem(\"accessToken\", accessToken);\n+            localStorage.setItem(\"userName\", name);\n+            localStorage.setItem(\"userEmail\", email);\n+            localStorage.setItem(\"userNickname\", nickname);\n+            axios.defaults.headers.common[\n+              \"Authorization\"\n+            ] = `${grantType} ${accessToken}`;\n+            navigate(\"/localmap\");\n+          } else {\n+            console.error(\"로그인 실패:\", responseData.message);\n+          }\n+        } else {\n+          console.error(\"서버 응답 오류: \", response.status);\n+        }\n+      })\n+      .catch((error) => {\n+        console.error(\"서버 통신 오류: \", error);\n+      });\n+\n+    console.log(\"Email:\", email);\n+    console.log(\"Password:\", password);\n+    // console.log(\"Remember Me:\", rememberMe); // 만약 사용한다면\n+  };\n+\n+  return (\n+    <div id=\"login\">\n+      <div className=\"main\">\n+        {/* 왼쪽 패널 */}\n+        <div className=\"left-panel\" style={{ width: \"60%\", float: \"left\" }}>\n+          {/* 로고 들어갈 자리 */}\n+          <div className=\"logo\"></div>\n+        </div>\n+        {/* 오른쪽 패널 */}\n+        <div className=\"right-panel\" style={{ width: \"40%\", float: \"left\" }}>\n+          {/* 상단 */}\n+          <div className=\"top-section\" style={{ height: \"20%\" }}>\n+            {/* 빈 공간 */}\n+          </div>\n+\n+          {/* 중간 */}\n+          <div className=\"middle-section\" style={{ height: \"60%\" }}>\n+            {/* 로그인 폼 */}\n+            <div className=\"login\">로그인</div>\n+            <form onSubmit={handleSubmit}>\n+              <div className=\"form\">\n+                <label htmlFor=\"email\"></label>\n+                <input\n+                  //클릭이 됐을 때\n+                  onFocus={() => {\n+                    setisEmailClicked(true);\n+                  }}\n+                  // 다른데 클릭\n+                  onBlur={() => {\n+                    setisEmailClicked(false);\n+                  }}\n+                  type=\"email\"\n+                  placeholder={isEmailClicked === true ? \"\" : \"이메일\"}\n+                  id=\"email\"\n+                  className=\"email-input\"\n+                  value={email}\n+                  onChange={handleEmailChange}\n+                  required\n+                />\n+              </div>\n+              <div>\n+                <label htmlFor=\"password\"></label>\n+                <input\n+                  onFocus={() => {\n+                    setisPasswordClicked(true);\n+                  }}\n+                  onBlur={() => {\n+                    setisPasswordClicked(false);\n+                  }}\n+                  type=\"password\"\n+                  id=\"password\"\n+                  className=\"password-input\"\n+                  placeholder={isPasswordClicked === true ? \"\" : \"비밀번호\"}\n+                  value={password}\n+                  onChange={handlePasswordChange}\n+                  required\n+                />\n+              </div>\n+              <div className=\"login-info-container\">\n+                <label className=\"checkbox-container\">\n+                  <input\n+                    type=\"checkbox\"\n+                    checked={rememberMe}\n+                    onChange={handleRememberMeChange}\n+                  />\n+                </label>\n+                <span className=\"login-info\">로그인 정보 저장</span>\n+              </div>\n+              <button className=\"login-btn\" type=\"submit\">\n+                로그인\n+              </button>\n+            </form>\n+          </div>\n+\n+          {/* 하단 */}\n+          <div className=\"bottom-section\" style={{ height: \"20%\" }}>\n+            <div className=\"main-bottom\">\n+              <button className=\"kakao-btn\" onClick={kakaoLoginHandler}>\n+                <img\n+                  className=\"kakaoImg\"\n+                  src={kakaoImg}\n+                  alt=\"이미지\"\n+                  width=\"20px\"\n+                  height=\"auto\"\n+                />\n+                <span>카카오 로그인</span>\n+              </button>\n+            </div>\n+            <div>\n+              <button className=\"google-btn\">\n+                <img\n+                  className=\"googleImg\"\n+                  src={googleImg}\n+                  width=\"20px\"\n+                  height=\"auto\"\n+                  alt=\"구글이미지\"\n+                />\n+                구글 로그인\n+              </button>\n+            </div>\n+          </div>\n+          <div className=\"button-container\">\n+            <Link to=\"/findidpw\">\n+              <button className=\"find-btn\">E-mail/PW 찾기</button>\n+            </Link>\n+            <Link to=\"/signup\">\n+              <button className=\"signUp-btn\">회원가입</button>\n+            </Link>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+}\n+export default Login;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1716193580451,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport \"../assets/style/login.css\";\nimport kakaoImg from \"../assets/img/kakao.png\";\nimport googleImg from \"../assets/img/google_login.png\";\nimport axios from \"axios\";\nimport { useUserContext } from \"../contexts/UserContext\";\n\nfunction Login() {\n  const navigate = useNavigate();\n\n  const [isEmailClicked, setisEmailClicked] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const [isPasswordClicked, setisPasswordClicked] = useState(false);\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n  // const { setUser } = useUserContext();\n\n  function kakaoLoginHandler() {\n    const Rest_api_key = \"\ta636a1c4c0b845384ca75dd034081a1b\";\n    const redirect_uri = \"http://localhost:3000/auth\";\n\n    const kakaoURL = `https://kauth.kakao.com/oauth/authorize?client_id=${Rest_api_key}&redirect_uri=${redirect_uri}&response_type=code`;\n\n    const popup = window.open(kakaoURL, \"Kakao Login\", \"width=600,height=600\");\n\n    const checkPopupClosed = setInterval(() => {\n      if (popup.closed) {\n        clearInterval(checkPopupClosed);\n        // window.location.href = \"/localmap\";\n      }\n    });\n\n    window.addEventListener(\"message\", (event) => {\n      if (event.origin !== window.origin) {\n        console.log(\"asdf\");\n        return;\n      }\n\n      const { type, data } = event.data;\n\n      if (type === \"kakaoLogin\") {\n        clearInterval(checkPopupClosed);\n        popup.close();\n        window.location.href = \"/localmap\";\n      }\n    });\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleRememberMeChange = (event) => {\n    setRememberMe(event.target.checked);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const url = \"http://61.109.239.63:50001/member-service/login\";\n    const data = {\n      email: email,\n      password: password,\n      // rememberMe: rememberMe,\n    };\n\n    axios\n      .post(url, data, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        withCredentials: true,\n      })\n      .then((response) => {\n        if (response.status === 200) {\n          const responseData = response.data;\n          if (responseData.isSuccess) {\n            const { grantType, accessToken } = responseData.result.jwtToken;\n            const { name, email, nickname } = responseData.result.loginMember;\n            localStorage.setItem(\"accessToken\", accessToken);\n            localStorage.setItem(\"userName\", name);\n            localStorage.setItem(\"userEmail\", email);\n            localStorage.setItem(\"userNickname\", nickname);\n            axios.defaults.headers.common[\n              \"Authorization\"\n            ] = `${grantType} ${accessToken}`;\n            // setUser(userData);\n            navigate(\"/localmap\");\n          } else {\n            console.error(\"로그인 실패:\", responseData.message);\n          }\n        } else {\n          console.error(\"서버 응답 오류: \", response.status);\n        }\n      })\n      .catch((error) => {\n        console.error(\"서버 통신 오류: \", error);\n      });\n\n    console.log(\"Email:\", email);\n    console.log(\"Password:\", password);\n    // console.log(\"Remember Me:\", rememberMe); // 만약 사용한다면\n  };\n\n  return (\n    <div id=\"login\">\n      <div className=\"main\">\n        {/* 왼쪽 패널 */}\n        <div className=\"left-panel\" style={{ width: \"60%\", float: \"left\" }}>\n          {/* 로고 들어갈 자리 */}\n          <div className=\"logo\"></div>\n        </div>\n        {/* 오른쪽 패널 */}\n        <div className=\"right-panel\" style={{ width: \"40%\", float: \"left\" }}>\n          {/* 상단 */}\n          <div className=\"top-section\" style={{ height: \"20%\" }}>\n            {/* 빈 공간 */}\n          </div>\n\n          {/* 중간 */}\n          <div className=\"middle-section\" style={{ height: \"60%\" }}>\n            {/* 로그인 폼 */}\n            <div className=\"login\">로그인</div>\n            <form onSubmit={handleSubmit}>\n              <div className=\"form\">\n                <label htmlFor=\"email\"></label>\n                <input\n                  //클릭이 됐을 때\n                  onFocus={() => {\n                    setisEmailClicked(true);\n                  }}\n                  // 다른데 클릭\n                  onBlur={() => {\n                    setisEmailClicked(false);\n                  }}\n                  type=\"email\"\n                  placeholder={isEmailClicked === true ? \"\" : \"이메일\"}\n                  id=\"email\"\n                  className=\"email-input\"\n                  value={email}\n                  onChange={handleEmailChange}\n                  required\n                />\n              </div>\n              <div>\n                <label htmlFor=\"password\"></label>\n                <input\n                  onFocus={() => {\n                    setisPasswordClicked(true);\n                  }}\n                  onBlur={() => {\n                    setisPasswordClicked(false);\n                  }}\n                  type=\"password\"\n                  id=\"password\"\n                  className=\"password-input\"\n                  placeholder={isPasswordClicked === true ? \"\" : \"비밀번호\"}\n                  value={password}\n                  onChange={handlePasswordChange}\n                  required\n                />\n              </div>\n              <div className=\"login-info-container\">\n                <label className=\"checkbox-container\">\n                  <input\n                    type=\"checkbox\"\n                    checked={rememberMe}\n                    onChange={handleRememberMeChange}\n                  />\n                </label>\n                <span className=\"login-info\">로그인 정보 저장</span>\n              </div>\n              <button className=\"login-btn\" type=\"submit\">\n                로그인\n              </button>\n            </form>\n          </div>\n\n          {/* 하단 */}\n          <div className=\"bottom-section\" style={{ height: \"20%\" }}>\n            <div className=\"main-bottom\">\n              <button className=\"kakao-btn\" onClick={kakaoLoginHandler}>\n                <img\n                  className=\"kakaoImg\"\n                  src={kakaoImg}\n                  alt=\"이미지\"\n                  width=\"20px\"\n                  height=\"auto\"\n                />\n                <span>카카오 로그인</span>\n              </button>\n            </div>\n            <div>\n              <button className=\"google-btn\">\n                <img\n                  className=\"googleImg\"\n                  src={googleImg}\n                  width=\"20px\"\n                  height=\"auto\"\n                  alt=\"구글이미지\"\n                />\n                구글 로그인\n              </button>\n            </div>\n          </div>\n          <div className=\"button-container\">\n            <Link to=\"/findidpw\">\n              <button className=\"find-btn\">E-mail/PW 찾기</button>\n            </Link>\n            <Link to=\"/signup\">\n              <button className=\"signUp-btn\">회원가입</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Login;\n"
        }
    ]
}