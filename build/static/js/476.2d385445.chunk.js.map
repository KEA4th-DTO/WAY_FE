{"version":3,"file":"static/js/476.2d385445.chunk.js","mappings":"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","sources":["components/Follower.js","components/Followers.js","components/Followings.js","views/MyPage.js"],"sourcesContent":["// Follower.js\nimport React from \"react\";\nimport \"../assets/style/follower.css\";\nfunction Follower({ name, nickName, history, daily, image, isFollow }) {\n  const handleFollowClick = () => {\n    console.log(`Current follow state for ${name}: ${isFollow}`); // 현재 팔로우 상태 로그 출력\n  };\n  return (\n    <div className=\"follower-container\">\n      <img src={image} alt={name} className=\"follower-image\" />\n      <div className=\"follower-info\">\n        <h3 className=\"follower-name\">{name}</h3>\n        <p className=\"follower-nickname\">{nickName}</p>\n      </div>\n      <div className=\"follower-stats\">\n        <div>\n          <span className=\"post-type\">History</span>\n          <span className=\"post-count\">{history}</span>\n        </div>\n        <div>\n          <span className=\"post-type\">Daily</span>\n          <span className=\"post-count\">{daily}</span>\n        </div>\n      </div>\n      <div className=\"follower-actions\">\n        <button\n          className={isFollow ? \"btn-unfollow\" : \"btn-follow\"}\n          onClick={handleFollowClick}\n        >\n          {isFollow ? \"언팔로우\" : \"팔로우\"}\n        </button>\n        <button className=\"btn-visit\">지도 방문</button>\n      </div>\n    </div>\n  );\n}\nexport default Follower;\n","import React, { useEffect, useState } from \"react\";\nimport Follower from \"./Follower\";\nimport \"../assets/style/follower.css\";\n\nfunction Followers() {\n  const [followers, setFollowers] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/followers\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network Error!\");\n        }\n        return response.json();\n      })\n      .then((data) => setFollowers(data))\n      .catch((error) => console.error(\"Error fetching posts:\", error));\n  }, []);\n\n  return (\n    <div className=\"post-title\">\n      <p className=\"follower-label\">팔로워 목록</p>\n      <div className=\"post-list\">\n        {followers.map((follower) => (\n          <Follower\n            key={follower.id}\n            name={follower.name}\n            history={follower.history}\n            daily={follower.daily}\n            nickName={follower.nickName}\n            image={follower.image}\n            isFollow={follower.isFollow}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Followers;\n","import React, { useEffect, useState } from \"react\";\nimport Follower from \"./Follower\";\nimport \"../assets/style/follower.css\";\n\nfunction Followers() {\n  const [followers, setFollowers] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/followings\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network Error!\");\n        }\n        return response.json();\n      })\n      .then((data) => setFollowers(data))\n      .catch((error) => console.error(\"Error fetching posts:\", error));\n  }, []);\n\n  return (\n    <div className=\"post-title\">\n      <p className=\"follower-label\">팔로잉 목록</p>\n      <div className=\"post-list\">\n        {followers.map((follower) => (\n          <Follower\n            key={follower.id}\n            name={follower.name}\n            history={follower.history}\n            daily={follower.daily}\n            nickName={follower.nickName}\n            image={follower.image}\n            isFollow={follower.isFollow}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Followers;\n","import React, { useState } from \"react\";\nimport profileImg from \"../assets/img/profile_img.jpeg\";\nimport \"../assets/style/myPage.css\";\n// import Posts from \"../components/PostsList\";\nimport Followers from \"../components/Followers\";\nimport Followings from \"../components/Followings\";\n\nfunction ProfilePage() {\n  const [activeTab, setActiveTab] = useState(\"posts\");\n\n  // 가상 데이터\n  const profile = {\n    imageUrl: profileImg,\n    name: \"신짱구\",\n    nickName: \"Crayon\",\n    bio: \"빙글빙글 돌아가는 하루\",\n    postsCount: 120,\n    followersCount: 80,\n    followingsCount: 72,\n  };\n\n  const handleTabClick = (tab) => {\n    setActiveTab(tab);\n  };\n\n  const Posts = () => <div>게시글 목록</div>;\n\n  return (\n    <div className=\"mypage-container\">\n      {/* left panel */}\n      <div className=\"myPage-leftpanel\">\n        <div className=\"profile-background\">\n          <img\n            src={profile.imageUrl}\n            alt=\"프로필 사진\"\n            className=\"profile-img\"\n            style={{\n              width: \"70%\",\n              height: \"auto\",\n              borderRadius: \"13px\",\n              top: \"15\",\n              left: \"15%\",\n            }}\n          />\n          <h1 className=\"userName\">{profile.name}</h1>\n          <p className=\"nickName\">{profile.nickName}</p>\n          <p className=\"bio\">{profile.bio}</p>\n          <div className=\"btn-container\">\n            <button\n              className=\"btn-post\"\n              onClick={() => handleTabClick(\"posts\")}\n            >\n              <span className=\"tab-count\">{profile.postsCount}</span>\n              <span className=\"tab-label\">게시글</span>\n            </button>\n            <button\n              className=\"btn-followers\"\n              onClick={() => handleTabClick(\"followers\")}\n            >\n              <span className=\"tab-count\">{profile.followersCount}</span>\n              <span className=\"tab-label\">팔로워</span>\n            </button>\n            <button\n              className=\"btn-followings\"\n              onClick={() => handleTabClick(\"followings\")}\n            >\n              <span className=\"tab-count\">{profile.followingsCount}</span>\n              <span className=\"tab-label\">팔로잉</span>\n            </button>\n          </div>\n        </div>\n      </div>\n      {/* right panel */}\n      <div className=\"myPage-rightpanel\">\n        {/* {activeTab === \"posts\" && <Posts />} */}\n        {activeTab === \"followers\" && <Followers />}\n        {activeTab === \"followings\" && <Followings />}\n      </div>\n    </div>\n  );\n}\n\nexport default ProfilePage;\n"],"names":["_ref","name","nickName","history","daily","image","isFollow","_jsxs","className","children","_jsx","src","alt","onClick","handleFollowClick","console","log","concat","followers","setFollowers","useState","useEffect","fetch","then","response","ok","Error","json","data","catch","error","map","follower","Follower","id","activeTab","setActiveTab","profile","imageUrl","profileImg","bio","postsCount","followersCount","followingsCount","handleTabClick","tab","style","width","height","borderRadius","top","left","Followers","Followings"],"sourceRoot":""}