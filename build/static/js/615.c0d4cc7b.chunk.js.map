{"version":3,"file":"static/js/615.c0d4cc7b.chunk.js","mappings":"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","sources":["components/main/Mapinformation.js","components/main/DailyPost.js","utils/shareKakaoLink.js","components/main/HistoryPost.js","views/Localmap.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nimport currentPin from \"../../assets/images/icons/currentPin.png\";\nimport allPin from \"../../assets/images/icons/allPin.png\";\nimport dailyPin from \"../../assets/images/icons/dailyPin.png\";\nimport historyPin from \"../../assets/images/icons/historyPin.png\";\nimport full_allPin from \"../../assets/images/icons/full_allPin.png\";\nimport full_dailyPin from \"../../assets/images/icons/full_dailyPin.png\";\nimport full_historyPin from \"../../assets/images/icons/full_historyPin.png\";\nimport refresh from \"../../assets/images/icons/refresh.png\";\n\nconst MapInformation = () => {\n    const [currentMyLocation, setCurrentMyLocation] = useState();\n    const [post, setPost] = useState([]);\n    const [bounds, setBounds] = useState({ ne: {lat: '', lng: ''}, sw: {lat: '', lng: ''} });\n    const mapRef = useRef(null);\n    const [activePin, setActivePin] = useState(\"all\"); // 현재 활성화된 핀 타입을 관리\n    const [mapState, setMapState] = useState({ zoom: 16, center: null }); // 지도의 확대/축소 및 중심 좌표 상태 관리\n    const [activeMarker, setActiveMarker] = useState(null);\n    const clickedMarkers = {}; // 클릭된 마커를 저장할 객체\n\n    // allPin 을 누르면 allPin 이미지가 full_allPin으로 바뀌고 dailyPin, historyPin 이미지는 원래 이미지로 바뀌는 함수\n    const [allPinState, setAllPinState] = useState(true);\n    const [dailyPinState, setDailyPinState] = useState(false);\n    const [historyPinState, setHistoryPinState] = useState(false);\n    \n    const onClickAllPin = () => {\n        setAllPinState(true);\n        setDailyPinState(false);\n        setHistoryPinState(false);\n        setActivePin(\"all\");\n    };\n\n    const onClickDailyPin = () => {\n        setAllPinState(false);\n        setDailyPinState(true);\n        setHistoryPinState(false);\n        setActivePin(\"daily\");\n    };\n\n    const onClickHistoryPin = () => {\n        setAllPinState(false);\n        setDailyPinState(false);\n        setHistoryPinState(true);\n        setActivePin(\"history\");\n    };\n\n    //지도 새로고침\n    const onRefreshClick = () => {\n        // Refresh 버튼 클릭 시 지도 상태를 초기화하여 처음 로드될 때와 동일하게 설정\n        setMapState({ zoom: 16, center: currentMyLocation });\n    };\n\n    //더미데이터 가져오기\n    useEffect(() => {\n        fetch('http://localhost:3001/post')\n            .then(res => res.json())\n            .then(data => {\n                setPost(data);\n            })\n            .catch(error => console.error(\"Error fetching data:\", error));\n    }, []);\n\n    //현재 위치 가져오기\n    useEffect(() => {\n        const success = (location) => {\n            setCurrentMyLocation({\n                lat: location.coords.latitude,\n                lng: location.coords.longitude,\n            });\n        };\n        const error = () => {\n            setCurrentMyLocation({ lat: 37.5666103, lng: 126.9783882 });\n        };\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(success, error);\n        }\n    }, []);\n\n    //지도 그리기\n    useEffect(() => {\n        const { naver } = window;\n        if (mapRef.current && naver && currentMyLocation) {\n            const location = new naver.maps.LatLng(currentMyLocation.lat, currentMyLocation.lng);\n            const map = new naver.maps.Map(mapRef.current, {\n                center: mapState.center,\n                zoom: mapState.zoom,\n                minZoom: 6, //12\n                maxZoom: 16,\n                zoomControl: true,\n                zoomControlOptions: {\n                    style: naver.maps.ZoomControlStyle.SMALL,\n                    position: naver.maps.Position.TOP_RIGHT\n                }\n            });\n\n            //지도 이동시 bounds 변경(좌표 받아오기)\n            function updateBounds() {\n                const bounds = map.getBounds();\n                setBounds({\n                    ne: {\n                        lat: bounds.getNE().lat(),\n                        lng: bounds.getNE().lng()\n                    },\n                    sw: {\n                        lat: bounds.getSW().lat(),\n                        lng: bounds.getSW().lng()\n                    }\n                });\n            }\n\n            // Immediately update bounds when map is initialized\n            updateBounds();\n\n            naver.maps.Event.addListener(map, 'bounds_changed', updateBounds);\n\n            //현재 위치 마커표시\n            new naver.maps.Marker({\n                position: location,\n                map,\n                icon: {\n                    url: currentPin,\n                    size: new naver.maps.Size(28, 28),\n                    scaledSize: new naver.maps.Size(28, 28),\n                },\n                zIndex: 999,\n            });\n\n           \n            // 게시글 마커 생성 시 클릭 이벤트 핸들러를 설정합니다.\n            const createMarker = (item, index) => {\n                const postLocation = new naver.maps.LatLng(parseFloat(item.latitude), parseFloat(item.longitude));\n                let iconUrl = item.postType === \"daily\" ? dailyPin : item.postType === \"history\" ? historyPin : allPin;\n                const marker = new naver.maps.Marker({\n                    position: postLocation,\n                    map,\n                    icon: {\n                        url: iconUrl,\n                        size: new naver.maps.Size(43, 43),\n                        scaledSize: new naver.maps.Size(43, 43),\n                    },\n                    zIndex: index,\n                });\n\n                // 마커에 클릭 이벤트를 추가합니다.\n                naver.maps.Event.addListener(marker, 'click', () => {\n                    handleMarkerClick(item.postId, marker);\n                });\n\n                return marker;\n            };\n\n            // postId에 따라 정상 아이콘을 반환합니다.\n            const getNormalPin = (postId) => {\n                const item = post.find(item => item.postId === postId);\n                // 게시물이 없는 경우 기본 아이콘 반환\n                if (!item) return allPin;\n                return item.postType === 'daily' ? dailyPin : historyPin;\n            }; \n\n\n            // postId에 따라 full 아이콘을 반환합니다.\n            const getFullPin = (postId) => {\n                const item = post.find(item => item.postId === postId);\n                // postId에 해당하는 게시물이 없을 경우 기본 아이콘 반환\n                if (!item) return allPin;\n                return item.postType === 'daily' ? full_dailyPin : full_historyPin;\n            };\n\n            // 마커 클릭 이벤트 핸들러\n            const handleMarkerClick = (postId, marker) => {\n                // 클릭된 마커가 이미 클릭된 상태인지 확인합니다.\n                if (activeMarker === postId) {\n                    // 클릭된 마커를 다시 클릭하면 원래 아이콘으로 변경하고 상태를 비활성화합니다.\n                    marker.setIcon({\n                        url: getNormalPin(postId),\n                        size: new naver.maps.Size(43, 43),\n                        scaledSize: new naver.maps.Size(43, 43),\n                    });\n                    setActiveMarker(null);\n                    delete clickedMarkers[postId]; // 클릭된 마커 목록에서 제거합니다.\n                } else {\n                    // 모든 클릭된 마커의 아이콘을 원래 아이콘으로 변경합니다.\n                    Object.values(clickedMarkers).forEach(clickedMarker => {\n                        clickedMarker.setIcon({\n                            url: getNormalPin(clickedMarker.postId), // 클릭된 마커의 postId를 가져와서 정상 아이콘을 설정합니다.\n                            size: new naver.maps.Size(43, 43),\n                            scaledSize: new naver.maps.Size(43, 43),\n                        });\n                    });\n                    // 클릭된 마커의 아이콘을 full 아이콘으로 변경합니다.\n                    marker.setIcon({\n                        url: getFullPin(postId),\n                        size: new naver.maps.Size(50, 50),\n                        scaledSize: new naver.maps.Size(50, 50),\n                    });\n                    // 클릭된 마커를 clickedMarkers에 저장합니다.\n                    clickedMarkers[postId] = marker;\n                    setActiveMarker(postId);\n                }\n            };\n\n\n\n            // 게시글 마커 표시\n            post.filter(item => activePin === 'all' || item.postType === activePin).forEach((item, index) => {\n                createMarker(item, index);\n            });\n\n\n\n            // 지도의 확대/축소 및 중심 좌표 상태 변경\n            naver.maps.Event.addListener(map, 'zoom_changed', () => {\n                setMapState({\n                    ...mapState,\n                    zoom: map.getZoom(),\n                });\n            });\n\n            naver.maps.Event.addListener(map, 'center_changed', () => {\n                setMapState({\n                    ...mapState,\n                    center: map.getCenter(),\n                });\n            });\n\n            \n\n\n        }\n    }, [currentMyLocation, post, activePin, mapState]);  // `activePin` 및 `mapState`를 의존성 목록에 추가\n\n    useEffect(() => {\n        // 페이지가 처음 로드될 때만 현재 위치를 중심으로 지도를 표시\n        if (currentMyLocation && mapRef.current) {\n            setMapState({\n                ...mapState,\n                center: new window.naver.maps.LatLng(currentMyLocation.lat, currentMyLocation.lng),\n            });\n        }\n        \n    }, [currentMyLocation]); // currentMyLocation을 의존성 목록에 추가하여 처음 로드될 때만 실행\n\n    return (\n        <div>\n                <button onClick={onRefreshClick} >\n                <img src={refresh} alt=\"refresh\" style={{ width: '20px', height: '20px', display: 'inline-block' }} />\n                </button>\n            \n            <div style={{ display: 'inline-block', marginLeft: '280px', border:\"3px solid red\" }}>\n                <span style={{ fontSize: '10px', margin:\"3px\" }}>all pin</span>\n                <span style={{ fontSize: '10px', margin:\"3px\" }}>daily pin</span>\n                <span style={{ fontSize: '10px', margin:\"3px\" }}>history pin</span>\n                <br />\n                <button onClick={onClickAllPin} style={{ border: \"none\" }}>\n                    <img src={allPinState ? full_allPin : allPin} alt=\"allPin\" style={{ width: '30px', height: '30px' }} />\n                </button>\n                <button onClick={onClickDailyPin} style={{ border: \"none\"}}>\n                    <img src={dailyPinState ? full_dailyPin : dailyPin} alt=\"dailyPin\" style={{ width: '30px', height: '30px' }} />\n                </button>\n                <button onClick={onClickHistoryPin} style={{ border: \"none\" }}>\n                    <img src={historyPinState ? full_historyPin : historyPin} alt=\"historyPin\" style={{ width: '30px', height: '30px' }} />\n                </button> \n            </div>\n            \n            <div ref={mapRef} style={{ width: \"500px\", height: \"500px\" }}></div>\n            <div>\n                <h4>Map Bounds:</h4>\n                <p>North-East Latitude: {bounds.ne.lat}, Longitude: {bounds.ne.lng}</p>\n                <p>South-West Latitude: {bounds.sw.lat}, Longitude: {bounds.sw.lng}</p>\n            </div>\n\n        </div>\n    );\n};\n\nexport default MapInformation;\n","import React, { useState, useEffect } from 'react';\nimport \"../../assets/scss/layout/_dailypost.scss\";\nimport user7 from \"../../assets/images/users/user7.png\";\nimport sky from \"../../assets/images/bg/sky.png\";\nimport full_dailyPin from \"../../assets/images/icons/full_dailyPin.png\";\nimport more from \"../../assets/images/logos/more.png\";\nimport share from \"../../assets/images/logos/share.png\";\nimport like from \"../../assets/images/logos/like.png\";\nimport full_like from \"../../assets/images/logos/full_like.png\";\n\nimport { shareKakao } from '../../utils/shareKakaoLink';\nimport { formatDate, formatPeriod } from '../../utils/changeFormat';\n\nconst DailyPost = ({ data }) => {\n        // null 체크를 위해 미리 초기화\n        const [likeNum, setLikeNum] = useState(data ? data.likeNum : 0);\n        const [liked, setLiked] = useState(false);\n        const [followed, setFollowed] = useState(false);\n\n        // 데이터가 없는 경우 null을 반환하므로 조건문을 사용하지 않음\n        useEffect(() => {\n            if (!data) {\n                return;\n            }\n            // 데이터의 초기 좋아요 상태에 따라 liked 상태 설정\n            setLiked(data.liked);\n        }, [data]);\n\n        const handleLikeClick = () => {\n            if (liked) {\n                setLikeNum(prevNum => prevNum - 1);\n            } else {\n                setLikeNum(prevNum => prevNum + 1);\n            }\n            setLiked(!liked);\n        };\n\n        const handleFollowClick = () => {\n            if (followed) {\n                setFollowed(false);\n            } else {\n                setFollowed(true);\n            }\n        };\n        \n        // const onBackClick = () => { \n        //     return(\n        //       <div>\n        //         <MainList />\n        //       </div>\n        //     );\n        // };\n\n        // useEffect(() => {\n        //     const script = document.createElement(\"script\");\n        //     script.src = \"https://developers.kakao.com/sdk/js/kakao.js\";\n        //     script.async = true;\n        //     document.body.appendChild(script);\n        //     return () => document.body.removeChild(script);\n        //     }, []);\n\n    return(\n      <div style={{border: \"3px solid red\"}} className=\"dailypost-frame\">\n        <div style={{border: \"3px solid red\"}} className=\"dailypost-frame1\"> \n        <div style={{border: \"3px solid orange\"}} className=\"dailypost-frame3\">\n            <div className=\"dailypost-frame4\">\n              <img alt=\"사용자 프로필 이미지\" src={user7} className=\"dailypost-profileimage\" />\n              <span className=\"dailypost-text10\">\n                <span>{data.memberId}</span>\n              </span>\n            </div>\n            <img\n              alt=\"postType, 핀 이미지\"\n              src={full_dailyPin}\n              className=\"dailypost-daily-pin-filled\"\n            />\n            <button className=\"dailypost-text12\" onClick={handleFollowClick} >\n                <span style={{ color: followed ? \"#404DF2\" : \"#000\" }}>팔로우</span>\n            </button>\n            <button style={{border: \"none\"}}>\n            <img\n              alt=\"더보가\"\n              src={more}\n              className=\"dailypost-menubutton\"\n            />\n            </button>\n          </div>\n        </div>\n          <div style={{border: \"3px solid orange\"}} className=\"dailypost-post1-history\">\n            <img alt=\"게시글 이미지\" src={sky} className=\"dailypost-image\" />\n          </div>\n\n          <div style={{border: \"3px solid yellow\"}} className=\"dailypost-frame2\">\n            <span style={{border: \"3px solid yellow\"}} className=\"dailypost-text08\">\n              <span>{data.title}</span>\n            </span>\n            <span style={{border: \"3px solid yellow\"}} className=\"dailypost-text02\">\n              <span>{data.postType}</span>\n            </span>\n            <span style={{border: \"3px solid yellow\"}} className=\"dailypost-text04\">\n              <span>\n                {data.body}\n              </span>\n            </span>\n            <span style={{border: \"3px solid green\"}} className=\"dailypost-text\">\n              <span>{formatDate(data.createdAt)} {formatPeriod(data.period)}</span>\n            </span>\n          </div>\n         \n        <div style={{border: \"3px solid green\"}} className=\"dailypost-group99\">\n          \n          <div className=\"dailypost-frame7\">\n            <button style={{ border: \"none\" }} onClick={handleLikeClick}>\n                <img\n                    alt=\"좋아요\"\n                    src={liked ? full_like : like}\n                    className=\"dailypost-svg\"\n                />\n            </button>\n           \n            <span className=\"dailypost-text16\">\n              <span>{likeNum}</span>\n            </span>\n          </div>\n          <button className=\"dailypost-frame6\" onClick={() => shareKakao()}>\n            <img\n              alt=\"공유하기\"\n              src={share}\n              className=\"dailypost-vector\"\n            />\n          </button>\n          <button className=\"dailypost-frame5\">\n            <span className=\"dailypost-text14\">\n              실시간 채팅하기\n            </span>\n          </button>\n        </div>\n        \n      </div>\n    \n    );\n    \n};\n\nexport default DailyPost;","import way_logo from \"../assets/images/logos/way_logo.png\";\n\nexport const shareKakao = () => { // url이 id값에 따라 변경되기 때문에 route를 인자값으로 받아줌\n    if (window.Kakao) {\n      const kakao = window.Kakao;\n      if (!kakao.isInitialized()) {\n        kakao.init(\"7af0cde77414deeec88c4edd5d501f3d\"); // 카카오에서 제공받은 javascript key를 넣어줌 -> .env파일에서 호출시킴\n      }\n  \n      kakao.Link.sendDefault({\n        objectType: \"feed\", // 카카오 링크 공유 여러 type들 중 feed라는 타입 -> 자세한 건 카카오에서 확인\n        content: {\n          title: \"Where Are You ?\", // 인자값으로 받은 title\n          description: \"지도 기반 커뮤니티 웹서비스\", // 인자값으로 받은 title\n          imageUrl: {way_logo},\n          link: {\n            mobileWebUrl: \"http://localhost:3000/#/localmap\", // 인자값으로 받은 route(uri 형태)\n            webUrl: \"http://localhost:3000/#/localmap\"\n          }\n        },\n        buttons: [\n          {\n            title: \"WAY로 가기\",\n            link: {\n              mobileWebUrl: \"http://localhost:3000/#/localmap\",\n              webUrl: \"http://localhost:3000/#/localmap\"\n            }\n          }\n        ]\n      });\n    }\n  };","import React from 'react'\nimport \"../../assets/scss/layout/_historypost.scss\";\nimport user3 from \"../../assets/images/users/user3.jpg\";\nimport like from \"../../assets/images/logos/like.png\";\nimport comment from \"../../assets/images/logos/comment.png\";\nimport more from \"../../assets/images/logos/more.png\";\nimport comment_more from \"../../assets/images/logos/comment_more.png\";\nimport sky from \"../../assets/images/bg/sky.png\";\nimport close from \"../../assets/images/logos/close.png\";\nimport sul from \"../../assets/images/bg/10sul.png\";\n\nconst HistoryPost = ({ data, onClose  }) => {\n  const handleCloseClick = () => {\n    onClose(); // 부모 컴포넌트에 닫기 이벤트 전달\n  };\n  \n  return (\n      <div style={{border: \"3px solid red\"}}className=\"floating-history-comment-floating-history-comment\">\n        <div style={{border: \"3px solid yellow\"}} className=\"floating-history-comment-history-floating-window-expanded-comment\">\n        <img\n            src={close}\n            alt=\"닫기\"\n            className=\"floating-history-comment-x11\"\n            onClick={handleCloseClick} // 닫기 버튼 클릭 시 handleCloseClick 함수 호출\n        />\n\n        {/* -------------게시글------------ */}\n          <span style={{border: \"3px solid green\"}} className=\"floating-history-comment-text065\">\n            <span>History</span>\n          </span>\n          <span className=\"floating-history-comment-text067\">\n            <span>복정동 10술집 후기</span>\n          </span>\n          <div style={{border: \"3px solid red\"}} id='작성자 정보' className=\"floating-history-comment-frame28\">\n          <div className=\"floating-history-comment-frame29\">\n            <img\n              src={user3}\n              alt=\"작성자 프로필이미지\"\n              className=\"floating-history-comment-freeiconuser14907114\"\n            />\n          </div>\n          <span className=\"floating-history-comment-text116\">\n            <span>id_21212</span>\n          </span>\n        </div>\n          <span className=\"floating-history-comment-text112\">\n             <span>2024년 3월 19일 12:39</span>\n         </span>\n        <span className=\"floating-history-comment-text114\">\n          <span>팔로우</span>\n        </span>\n        <img\n          src={more}\n          alt=\"더보기\"\n          className=\"floating-history-comment-freeiconmenu83733991\"\n        />\n\n            {/* -------------게시글 내용------------ */}    \n        <div style={{border: \"3px solid red\", overflow:\"auto\"}}>\n          <span className=\"floating-history-comment-text069\">\n            내용\n            </span>\n          <img\n            src={sul}\n            alt=\"IMAGEHistoryImage1351\"\n            className=\"floating-history-comment-image-history-image\"\n          />\n          <span className=\"floating-history-comment-text097\">\n            <span>게시글 끝</span>\n          </span>\n          {/* -------------해시태그------------ */}\n        <div style={{border: \"3px solid red\"}} id='해시태그' className=\"floating-history-comment-frame\">\n            <span className=\"floating-history-comment-text\">\n            <span>#짱구</span>\n            </span>\n            <span className=\"floating-history-comment-text002\">\n            <span>#가천대</span>\n            </span>\n            <span className=\"floating-history-comment-text004\">\n            <span>#위례</span>\n            </span>\n        </div>\n    </div>\n        {/* -------------게시글 좋아요수, 댓글수------------ */}\n          <div className=\"floating-history-comment-frame26\">\n            <img\n              src={like}\n              alt=\"게시글 좋아요\"\n              className=\"floating-history-comment-svg\"\n            />\n            <span id='좋아요 수' className=\"floating-history-comment-text107\">\n              <span>95</span>\n            </span>\n          </div>\n\n          <div className=\"floating-history-comment-frame27\">\n            <div className=\"floating-history-comment-comment\">\n              <img\n                src={comment}\n                alt=\"댓글\"\n                className=\"floating-history-comment-vector\"\n              />\n            </div>\n            <span id='댓글수' className=\"floating-history-comment-text109\">\n                5\n            </span>\n          </div>\n        </div>\n     \n\n        {/* ------------댓글------------- */}\n          <div style={{border: \"3px solid red\"}} id='댓글 컨테이너' className=\"floating-history-comment-frame01\">\n            <div style={{border: \"3px solid red\"}} id='댓글 컨텐츠' className=\"floating-history-comment-frame02\">\n                <div style={{border: \"3px solid orange\"}} id='좋아요' className=\"floating-history-comment-frame04\">\n                    <img\n                        src={like}\n                        alt=\"좋아요\"\n                        className=\"floating-history-comment-hearts1\"\n                    />\n                    <span className=\"floating-history-comment-text012\">\n                        <span>댓글 좋아요 수</span>\n                    </span>\n                </div>\n              <img\n                src={comment_more}\n                alt=\"댓글 더보기\"\n                className=\"floating-history-comment-image\"\n              />\n\n              <div style={{border: \"3px solid orange\"}} id='댓글 작성자' className=\"floating-history-comment-frame03\">\n              <img\n                  src={user3}\n                  alt=\"댓글 작성자 프로필이미지\"\n                  className=\"floating-history-comment-freeiconuser1490711\"\n                />\n                <span style={{border: \"3px solid orange\"}} id='사용자 아이디' className=\"floating-history-comment-text006\">\n                  <span>{data.memberId}</span>\n                </span>\n              </div>\n              <span style={{border: \"3px solid orange\"}}  className=\"floating-history-comment-text008\">\n                <span>댓글 내용</span>\n              </span>\n              <span className=\"floating-history-comment-text010\">\n                <span>댓글단 날짜</span>\n              </span>\n            </div> \n            <div className=\"floating-history-comment-frame08\">\n              <div className=\"floating-history-comment-frame10\">\n                <span className=\"floating-history-comment-text026\">\n                  <span>댓글 달기</span>\n                </span>\n              </div>\n              <div className=\"floating-history-comment-frame09\">\n                <span className=\"floating-history-comment-text024\">\n                  <span>삭제하기</span>\n                </span>\n              </div>\n            </div>\n          </div>\n\n           {/* ------------답글------------- */}\n          \n          <div style={{border: \"3px solid green\"}} id='답글 컨테이너' className=\"floating-history-comment-frame19\">\n            <div style={{border: \"3px solid orange\"}} className=\"floating-history-comment-frame14\">\n                <img\n                    src={like}\n                    alt=\"좋아요\"\n                    className=\"floating-history-comment-image3\"\n                />\n                <span className=\"floating-history-comment-text034\">0</span>\n                </div>\n            <div style={{border: \"3px solid green\"}} id='답글 컨텐츠' className=\"floating-history-comment-frame12\">\n              <span className=\"floating-history-comment-text028\">\n                <span>답글 내용입니다!</span>\n              </span>\n              <span className=\"floating-history-comment-text030\">\n                <span>답글 작성 날짜</span>\n              </span>\n                <div className=\"floating-history-comment-frame13\">\n                <img\n                  src={user3}\n                  alt=\"댓글 작성자 프로필이미지\"\n                  className=\"floating-history-comment-freeiconuser1490711\"\n                />\n                    <span className=\"floating-history-comment-text032\">\n                    <span>아이디</span>\n                    </span>\n                </div>\n                <img\n                    src={comment_more}\n                    alt=\"더보기\"\n                    className=\"floating-history-comment-image2\"\n                />\n            </div>\n            <div className=\"floating-history-comment-frame08\">\n              <div className=\"floating-history-comment-frame10\">\n                <span className=\"floating-history-comment-text026\">\n                  <span>댓글 달기</span>\n                </span>\n              </div>\n              <div className=\"floating-history-comment-frame09\">\n                <span className=\"floating-history-comment-text024\">\n                  <span>신고하기</span>\n                </span>\n              </div>\n            </div>\n          </div>\n\n         {/* ------------댓글 작성칸------------- */}\n   \n          <div style={{border: \"3px solid green\"}} className=\"floating-history-comment-group45\">\n            <img\n              src=\"/external/rectangle391351-s4js.svg\"\n              alt=\"Rectangle391351\"\n              className=\"floating-history-comment-rectangle39\"\n            />\n            <div style={{border: \"3px solid green\"}} className=\"floating-history-comment-group36\">\n              <div className=\"floating-history-comment-group27\">\n                <span className=\"floating-history-comment-text059\">\n                  <span>10술집</span>\n                </span>\n              </div>\n              <img\n                src={user3}\n                alt=\"작성자 프로필이미지\"\n                className=\"floating-history-comment-freeiconuser14907112\"\n              />\n            </div>\n            <img\n            style={{border: \"3px solid green\"}}\n              src=\"/external/rectangle401351-jkhk-200h.png\"\n              alt=\"Rectangle401351\"\n              className=\"floating-history-comment-rectangle40\"\n            />\n            \n                <div style={{border: \"3px solid green\"}} className=\"floating-history-comment-frame25\">\n                <span className=\"floating-history-comment-text061\">\n                    <span>등록</span>\n                </span>\n                </div>\n                <span className=\"floating-history-comment-text063\">\n                <span>댓글을 입력해주세요.</span>\n                </span>\n          </div>\n\n      </div>\n    \n  );\n};\n\nexport default HistoryPost;\n","import React, { useState, useEffect } from \"react\";\r\nimport MapInformation from \"../components/main/Mapinformation\";\r\nimport DailyList from \"../components/main/DailyList\";\r\nimport HistoryList from \"../components/main/HistoryList\";\r\nimport DailyPost from \"../components/main/DailyPost\";\r\nimport HistoryPost from \"../components/main/HistoryPost\";\r\nimport \"../assets/scss/layout/_localmap.scss\";\r\nimport back from \"../assets/images/logos/back.png\";\r\n\r\nconst Localmap = () => {\r\n  //데이터 가져오기\r\n  const [post, setPost] = useState([]);\r\n  const [selectedPost, setSelectedPost] = useState(null); // 추가: 선택된 게시글 상태\r\n\r\n  \r\n  useEffect(()=>{\r\n      fetch('http://localhost:3001/post') //API경로 적어주기\r\n      .then(res => {\r\n          return res.json() //json으로 변환됨\r\n      })\r\n      .then(data => {\r\n          setPost(data);\r\n      })\r\n      .catch(error => console.error(\"Error fetching data:\", error));\r\n  }, []);\r\n  \r\n  // 포스트 클릭 시 선택된 포스트 업데이트\r\n  const handlePostClick = (selectedItem) => {\r\n    setSelectedPost(selectedItem);\r\n  };\r\n\r\n  // 뒤로가기 버튼 클릭 시\r\n  const handleBackClick = () => {\r\n    setSelectedPost(null); // 선택된 포스트 초기화\r\n  };\r\n\r\n  return ( \r\n    <div id=\"local-con\" style={{border: \"5px solid red\", display: \"flex\", width: \"950px\"}}>\r\n      {/* 지도 & 핀*/}\r\n      <div id=\"map-con\" style={{border: \"3px solid blue\"}}>\r\n        <div>\r\n          <span className=\"initial-main-page-text\">\r\n            로컬맵\r\n          </span>\r\n          <MapInformation />\r\n        </div>\r\n      </div>\r\n        \r\n      {/* 게시글*/}\r\n      <div className=\"initial-main-page-frame\" style={{border: \"3px solid green\", marginLeft: \"20px\", position: \"relative\"}}>\r\n        <span className=\"initial-main-page-text\">\r\n          게시글\r\n        </span>\r\n        <button style={{display: selectedPost && selectedPost.postType === 'daily' ? \"block\" : \"none\"}} className=\"dailypost-frame8\" onClick={handleBackClick}>\r\n          {selectedPost && selectedPost.postType === 'daily' &&\r\n          <img\r\n            alt=\"뒤로가기\"\r\n            src={back}\r\n            className=\"dailypost-vector3\"\r\n          />}\r\n        </button>\r\n        <div style={{ display: selectedPost && selectedPost.postType === 'daily' ? \"block\" : \"none\", border: \"3px solid yellow\", overflow: \"auto\", marginTop: \"10%\", width: \"410px\", height: \"640px\" }}>\r\n          {selectedPost && selectedPost.postType === 'daily' && <DailyPost data={selectedPost} />}\r\n        </div>\r\n        <div id=\"list\" style={{ display: selectedPost && selectedPost.postType === 'daily' ? \"none\" : \"block\", border: \"3px solid yellow\", overflow: \"auto\", marginTop: \"10%\", width: \"410px\", height: \"640px\" }}>\r\n          {post.map(item => (\r\n            <button style={{border:\"none\"}} key={item.id} onClick={() => handlePostClick(item)}>\r\n              {item.postType === 'daily' ? <DailyList data={item} /> : <HistoryList data={item} />}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {selectedPost && selectedPost.postType === 'history' && (\r\n        <div className=\"historyPost-con\">\r\n          <HistoryPost data={selectedPost} onClose={handleBackClick} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Localmap;\r\n"],"names":["MapInformation","currentMyLocation","setCurrentMyLocation","useState","post","setPost","bounds","setBounds","ne","lat","lng","sw","mapRef","useRef","activePin","setActivePin","mapState","setMapState","zoom","center","activeMarker","setActiveMarker","clickedMarkers","allPinState","setAllPinState","dailyPinState","setDailyPinState","historyPinState","setHistoryPinState","useEffect","fetch","then","res","json","data","catch","error","console","success","location","coords","latitude","longitude","navigator","geolocation","getCurrentPosition","naver","window","current","maps","LatLng","map","Map","minZoom","maxZoom","zoomControl","zoomControlOptions","style","ZoomControlStyle","SMALL","position","Position","TOP_RIGHT","updateBounds","getBounds","getNE","getSW","Event","addListener","Marker","icon","url","currentPin","size","Size","scaledSize","zIndex","createMarker","item","index","postLocation","parseFloat","iconUrl","postType","dailyPin","historyPin","allPin","marker","handleMarkerClick","postId","getNormalPin","find","getFullPin","full_dailyPin","full_historyPin","setIcon","Object","values","forEach","clickedMarker","filter","getZoom","getCenter","_jsxs","children","_jsx","onClick","onRefreshClick","src","refresh","alt","width","height","display","marginLeft","border","fontSize","margin","onClickAllPin","full_allPin","onClickDailyPin","onClickHistoryPin","ref","_ref","likeNum","setLikeNum","liked","setLiked","followed","setFollowed","className","user7","memberId","handleFollowClick","color","more","sky","title","body","formatDate","createdAt","formatPeriod","period","handleLikeClick","prevNum","like","shareKakao","Kakao","kakao","isInitialized","init","Link","sendDefault","objectType","content","description","imageUrl","way_logo","link","mobileWebUrl","webUrl","buttons","onClose","close","handleCloseClick","id","user3","overflow","sul","comment","comment_more","Localmap","selectedPost","setSelectedPost","handleBackClick","marginTop","DailyPost","DailyList","HistoryList","HistoryPost"],"sourceRoot":""}