{"version":3,"file":"static/js/379.539809ec.chunk.js","mappings":"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","sources":["pages/Signup.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport CryptoJS from \"crypto-js\";\nimport \"../assets/style/signup.css\";\n\nconst Signup = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [birthdate, setBirthdate] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [emailCheck, setEmailCheck] = useState(false);\n  const [nicknameCheck, setNicknameCheck] = useState(false);\n  const [agreement, setAgreement] = useState(false);\n  const [encryptedData, setEncryptedData] = useState(\"\");\n\n  const handleSignUp = () => {\n    // 회원가입 정보 객체 생성\n    const signUpData = {\n      email: email,\n      password: password,\n      phone: phone,\n      name: name,\n      birthdate: birthdate,\n      nickname: nickname,\n      agreement: agreement,\n    };\n\n    const secretKey = \"mySecretKey\";\n\n    const encryptedData = CryptoJS.AES.encrypt(\n      JSON.stringify(signUpData),\n      secretKey\n    ).toString();\n\n    // fetch를 사용하여 서버로 POST 요청을 보냅니다.\n    fetch(\"http://example.com/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(signUpData),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log(\"회원가입이 완료되었습니다.\", data);\n        // 회원가입 성공 후 추가적인 처리를 할 수 있습니다.\n      })\n      .catch((error) => {\n        console.error(\"Error during signup:\", error);\n        // 에러 발생 시 처리\n      });\n  };\n\n  const handleEmailCheck = () => {\n    // 이메일 중복 확인 처리 로직을 추가합니다.\n    console.log(\"Email checked!\");\n    setEmailCheck(true); // 예시에서는 무조건 true로 설정합니다.\n  };\n\n  const handleNicknameCheck = () => {\n    // 닉네임 중복 확인 처리 로직을 추가합니다.\n    console.log(\"Nickname checked!\");\n    setNicknameCheck(true); // 예시에서는 무조건 true로 설정합니다.\n  };\n\n  return (\n    <div id=\"signup\">\n      <div className=\"parent-container\">\n        <div className=\"signup\">\n          <h2>회원가입</h2>\n        </div>\n        <div className=\"signup-info\">\n          <p>필수입력사항</p>\n        </div>\n        <div className=\"horizontal-divider\"></div>\n        <div className=\"signup-contatiner\">\n          <div className=\"email\">\n            <label>이메일</label>\n            <input\n              type=\"email\"\n              className=\"signup-email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"이메일을 입력하세요\"\n              required\n            />\n            <button className=\"btn-duplicate\" onClick={handleEmailCheck}>\n              중복확인\n            </button>\n            {emailCheck && <p>이메일을 사용할 수 있습니다.</p>}\n          </div>\n          <div id=\"signup-pwd\" className=\"password\">\n            <label>비밀번호</label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"signup-password\"\n              placeholder=\"비밀번호를 입력하세요\"\n              required\n            />\n          </div>\n          <div className=\"re-pwd\">\n            <label>비밀번호 재확인</label>\n            <input\n              type=\"password\"\n              className=\"signup-repassword\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              placeholder=\"비밀번호를 다시 입력하세요\"\n              required\n            />\n          </div>\n          <div className=\"phoneNum\">\n            <label>핸드폰 번호</label>\n            <input\n              type=\"tel\"\n              className=\"signup-phoneNum\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n              placeholder=\"010-1234-5678\"\n              required\n            />\n          </div>\n          <div className=\"name\">\n            <label>이름</label>\n            <input\n              type=\"text\"\n              value={name}\n              className=\"signup-name\"\n              onChange={(e) => setName(e.target.value)}\n              placeholder=\"이름을 입력하세요\"\n              required\n            />\n          </div>\n\n          <div className=\"nickName\">\n            <label>닉네임</label>\n            <input\n              type=\"text\"\n              value={nickname}\n              className=\"signup-nickname\"\n              onChange={(e) => setNickname(e.target.value)}\n              placeholder=\"닉네임을 입력하세요\"\n              required\n            />\n            <button onClick={handleNicknameCheck} className=\"btn-duplicate\">\n              중복확인\n            </button>\n\n            {nicknameCheck && <p>사용할 수 있는 닉네임입니다.</p>}\n          </div>\n          <div className=\"agree\">\n            <label>\n              <span className=\"agree\">개인정보 동의</span>\n              <input\n                type=\"checkbox\"\n                checked={agreement}\n                onChange={(e) => setAgreement(e.target.checked)}\n              />\n            </label>\n          </div>\n        </div>\n        <div className=\"signup-panel\">\n          <button className=\"btn-signup\" onClick={handleSignUp}>\n            회원가입\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n"],"names":["Signup","email","setEmail","useState","password","setPassword","confirmPassword","setConfirmPassword","phone","setPhone","name","setName","birthdate","setBirthdate","nickname","setNickname","emailCheck","setEmailCheck","nicknameCheck","setNicknameCheck","agreement","setAgreement","encryptedData","setEncryptedData","_jsx","id","children","_jsxs","className","type","value","onChange","e","target","placeholder","required","onClick","handleEmailCheck","console","log","handleNicknameCheck","checked","handleSignUp","signUpData","CryptoJS","encrypt","JSON","stringify","toString","fetch","method","headers","body","then","response","ok","Error","json","data","catch","error"],"sourceRoot":""}