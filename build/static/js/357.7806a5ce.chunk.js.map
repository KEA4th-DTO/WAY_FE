{"version":3,"file":"static/js/357.7806a5ce.chunk.js","mappings":"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","sources":["components/main/ChatRoom.js","components/main/ChatContent.js","views/Chatting.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"../../assets/scss/layout/_chatting.scss\";  \nimport sky from \"../../assets/images/bg/sky.png\";\nimport user6 from \"../../assets/images/users/user6.png\";\nimport full_checkbox from \"../../assets/images/icons/full_checkbox.png\";\nimport checkbox from \"../../assets/images/icons/checkbox.png\";\n\nconst ChatRoom= ({data}) => {\n  \n  return (\n    <div>\n          <div className='room-back'>\n          <img\n              src={user6}\n              alt=\"IMAGE2251\"\n              className=\"frame2-image1\"\n            />\n            <span className=\"frame2-text09\">\n              <span>{data.title}</span>\n            </span>\n            <span className=\"frame2-text08\">{data.memberNum}</span>\n            <span className=\"frame2-text06\">\n              <span>{data.last_chat_time}</span>\n            </span>\n            <span className=\"frame2-text04\">\n              <span>{data.last_chat}</span>\n            </span>\n            <div className=\"frame2-ellipse1\">\n              <span className=\"frame2-text\"> {data.alarmNum} </span>\n            </div>\n          </div>    \n        </div>\n  );\n};\n\nexport default ChatRoom;\n","import React, { useState, useEffect } from 'react';\nimport \"../../assets/scss/layout/_chatcontent.scss\";\nimport sky from \"../../assets/images/bg/sky.png\";   \nimport close from \"../../assets/images/logos/close.png\";\nimport members from \"../../assets/images/logos/members.png\";\n\nconst Frame = ({ data, onClose }) => {\n    const memberId = \"id_222\"; // 임시 사용자 아이디\n\n    const [content, setContent] = useState([]);\n    \n    useEffect(()=>{\n        fetch('http://localhost:3001/chatcontent') //API경로 적어주기\n        .then(res => {\n            return res.json() //json으로 변환됨\n        })\n        .then(data => {\n            setContent(data);\n        })\n        .catch(error => console.error(\"Error fetching data:\", error));\n    }, []);\n\n    const handleCloseClick = () => {\n        onClose(); // 부모 컴포넌트에 닫기 이벤트 전달\n      };\n\n  return (\n      <div style={{border:\"3px solid red\"}}  className=\"frame-frame\">\n        {/* 상단창 */}\n         <div className=\"frame-frame8\">\n          <img\n            src={close}\n            alt=\"닫기\"\n            className=\"frame-sv-gx-button\"\n            onClick={handleCloseClick} // 닫기 버튼 클릭 시 handleCloseClick 함수 호출\n          />\n          <div className=\"frame-line11\"></div>\n          \n          <span className=\"frame-text24\">\n            <span>{data.title}</span>\n          </span>\n          <span className=\"frame-text22\">\n            <span>{data.period}</span>\n          </span>\n          <img\n            src={members}\n            alt=\"사람 아이콘\"\n            className=\"frame-svg\"\n          />\n         <span className=\"frame-svg2\" >{data.memberNum}</span>\n        </div>\n\n        {/* 채팅창 */}\n        <div className=\"frame-frame2\">\n          <div\n            className=\"frame-rectangle46\"\n          />\n          <div className=\"frame-frame3\">\n            <span className=\"frame-text04\">\n              <span>{content.nickname}ShinHyungMan</span>\n            </span>\n            <span className=\"frame-text06\">\n              <span>{content.content}저 위례사는데 같이 봐요!</span>\n            </span>\n          </div>\n          <span className=\"frame-text08\">\n            <span>{content.time}18:38</span>\n          </span>\n        </div>\n\n        <div className=\"frame-frame4\">\n          <div\n            className=\"frame-rectangle461\"\n          />\n          <div className=\"frame-frame5\">\n            <span className=\"frame-text10\">\n              <span>{content.nickname}Crayon</span>\n            </span>\n            <span className=\"frame-text12\">\n              <span>{content.content}그러면 제가 지금 위례로 출발 할게요!</span>\n            </span>\n          </div>\n          <span className=\"frame-text14\">\n            <span>{content.time}18:40</span>\n          </span>\n        </div>\n\n        <div className=\"frame-frame6\">\n          <div\n            className=\"frame-rectangle462\"\n          />\n          <div className=\"frame-frame7\">\n            <span className=\"frame-text16\">\n              <span>Crayon</span>\n            </span>\n            <span className=\"frame-text18\">\n              <span>카톡 오픈채팅 주소 드릴테니까 여기로 연락해요!</span>\n            </span>\n          </div>\n          <span className=\"frame-text20\">\n            <span>18:40</span>\n          </span>\n        </div>\n        \n\n        {/*  전송창  */}\n        <div className=\"frame-image\" />\n        <span className=\"frame-text\">\n          <span>내용을 입력해주세요.</span>\n        </span>\n        <div className=\"frame-frame1\">\n          <div className=\"frame-group55\">\n            <span className=\"frame-text02\">\n              <span>전송</span>\n            </span>\n          </div>\n        </div>\n    \n      \n    </div>\n  )\n}\n\nexport default Frame\n","import React, { useState, useEffect } from 'react';\nimport \"../assets/scss/layout/_chatting.scss\";  \nimport sky from \"../assets/images/bg/sky.png\";\nimport user6 from \"../assets/images/users/user6.png\";\nimport full_checkbox from \"../assets/images/icons/full_checkbox.png\";\nimport checkbox from \"../assets/images/icons/checkbox.png\";\nimport ChatRoom from '../components/main/ChatRoom';\nimport ChatContent from '../components/main/ChatContent';\n\nconst Chatting= () => {\n\n  //데이터 가져오기\n  const [chatRoom, setChatRoom] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState(null); // 추가: 선택된 게시글 상태\n\n  \n  useEffect(()=>{\n      fetch('http://localhost:3001/chatroom') //API경로 적어주기\n      .then(res => {\n          return res.json() //json으로 변환됨\n      })\n      .then(data => {\n          setChatRoom(data);\n      })\n      .catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  // 포스트 클릭 시 선택된 포스트 업데이트\n  const handleRoomClick = (selectedItem) => {\n    setSelectedRoom(selectedItem);\n  };\n\n  // 뒤로가기 버튼 클릭 시\n  const handleBackClick = () => {\n    setSelectedRoom(null); // 선택된 포스트 초기화\n  };\n\n  return (\n    <div style={{position:\"relative\"}}>\n    <div style={{border: \"3px solid red\"}} className=\"frame-container\">\n    {/* 채팅 상단 메뉴 */}\n    <div className=\"frame1-frame\">\n      <button style={{border:\"none\"}}>\n        <img src={checkbox} alt=\"Checkbox2251\" className=\"frame1-checkbox\" />\n      </button>\n      <span className=\"frame1-text\">\n        <button style={{border:\"none\"}}>나가기</button>\n      </span>\n      <span className=\"frame1-text2\">\n        <button style={{border:\"none\"}}>읽음</button>\n      </span>\n      </div>\n\n     {/* 채팅 제목 */}\n      <div className=\"chatting\">\n        <span className=\"text\">\n          채팅\n        </span>\n        <div className=\"alarm\">\n          <span className=\"text\">\n            15\n          </span>\n        </div>\n    </div>\n\n      {/* 대화방 */}\n      \n      <div style={{border: \"3px solid red\", overflow: \"auto\"}} className=\"frame2-frame\">\n        {chatRoom.map((item, index) => (\n        <div key={index}>\n          <img\n            src={checkbox}\n            alt=\"Checkbox2251\"\n            className=\"frame2-checkbox\"\n          />\n          <button style={{border:\"none\"}} onClick={() => handleRoomClick(item)}>\n            <ChatRoom data={item} />\n          </button>\n        </div>\n      ))}\n      </div>\n      \n    </div>\n    \n    {selectedRoom && (\n        <div className='frame3-container'>\n          <ChatContent data={selectedRoom} onClose={handleBackClick} /> \n        </div>\n      )}    \n    </div>\n  );\n};\n\nexport default Chatting;\n"],"names":["_ref","data","_jsx","children","_jsxs","className","src","user6","alt","title","memberNum","last_chat_time","last_chat","alarmNum","onClose","content","setContent","useState","useEffect","fetch","then","res","json","catch","error","console","style","border","close","onClick","handleCloseClick","period","nickname","time","Chatting","chatRoom","setChatRoom","selectedRoom","setSelectedRoom","position","checkbox","overflow","map","item","index","ChatRoom","ChatContent","handleBackClick"],"sourceRoot":""}